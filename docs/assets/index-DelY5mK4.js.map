{"version":3,"file":"index-DelY5mK4.js","sources":["../../main.js"],"sourcesContent":["// In completing this project, I have started with the starter code I downloaded from L18 folder, which was recommended in the Assignment Description. Using that template as a starting point, I made numerous changes to the original code to get to my final output. Throughout the process, I had a lot of extra functionalities that I wanted to add onto my project on top of the requirements list from the assignment description. When incorporating these extra features, I have used genAI to figure out where in my main.js file to integrate those functions to make the whole thing run properly. Also, as I struggled at first with the localStorage requirement, I got a few suggestions from genAI that helped me get to the result I desired. \n\n// The following is a list of extra features that I intended to add to my project\n// 1. Dark Mode Toggle \n// 2. Pause and Resume Timer Button\n// 3. Audio Notification on Session End\n// 4. Use of FontAwesome Lemon Icons \n// 5. Displyaing \"Break Over🎉\" message at the end of break sessions\n// 6. Allowing Users to Stop the Work Session\n// 7. Allowing Users to Stop the Break Session\n// 8. Improved UI with Modern Style and Smoother Transitions\n\n\n\nimport \"./style.css\";\n\n// Assignment Requirement 1 - Ability to add new tasks and enter custom task descriptions\nconst TASK_PLACEHOLDER = \"Task Description\";\nconst addTaskButton = document.querySelector(\"button#add-task\");\nconst taskList = document.querySelector(\"ul#tasks\");\n// EXTRA FEATURE - PAUSE BUTTON\nconst pauseButtonGlobal = document.getElementById(\"pause-btn\"); // Global Pause Button\n\n// EXTRA FEATURE - DARK MODE TOGGLE\nconst darkModeToggle = document.createElement(\"button\");\ndarkModeToggle.textContent = \"🌙 Toggle Dark Mode\";\ndarkModeToggle.className = \"dark-mode-btn\";\ndocument.body.prepend(darkModeToggle);\n\n// Toggle dark mode class on body\ndarkModeToggle.addEventListener(\"click\", () => {\n    document.body.classList.toggle(\"dark-mode\");\n});\n\n// Initialize empty tasks array\nlet tasks = [];\nlet intervalId = null;\nlet isPaused = false;\nlet timeLeft = 0;\n\nfunction addTask(description, sessionCount = 0) {\n    let taskDescription = description;\n\n    const newTask = document.createElement(\"li\");\n    const descriptionSpan = document.createElement(\"span\");\n    const descriptionInput = document.createElement(\"input\");\n    const startButton = document.createElement(\"button\");\n    const removeButton = document.createElement(\"button\");\n    const sessionCounterSpan = document.createElement(\"span\");\n    sessionCounterSpan.className = \"session-counter\";\n    sessionCounterSpan.innerHTML = \"\"; // Clear first\n    for (let i = 0; i < sessionCount; i++) {\n        const lemonIcon = document.createElement(\"i\");\n        lemonIcon.className = \"fas fa-lemon\"; // FontAwesome lemon\n        lemonIcon.style.color = \"#FFD700\"; // Gold color\n        sessionCounterSpan.appendChild(lemonIcon);\n    }\n    sessionCounterSpan.dataset.count = sessionCount;\n\n    startButton.textContent = \"▶️ start\";\n    startButton.className = \"start-btn\";\n    startButton.addEventListener(\"click\", () => startWorkSession(newTask));\n\n    removeButton.innerHTML = \"🗑️\";\n    removeButton.className = \"remove-btn\";\n    removeButton.addEventListener(\"click\", removeTask);\n\n    descriptionInput.setAttribute(\"type\", \"text\");\n    descriptionInput.setAttribute(\"placeholder\", TASK_PLACEHOLDER);\n\n    newTask.append(descriptionSpan, sessionCounterSpan, startButton, removeButton);\n    taskList.append(newTask);\n\n    descriptionSpan.addEventListener(\"click\", editTask);\n\n    tasks.push({ description: taskDescription, sessionCount: sessionCount });\n    saveTasksToLocalStorage();\n    setTaskDescription(taskDescription);\n\n    function getTaskIndex() {\n        return Array.from(taskList.children).indexOf(newTask);\n    }\n    // Assignment Requirement 2 - Users must be able to remove tasks\n    function removeTask() {\n        newTask.remove();\n        const taskIndex = getTaskIndex();\n        tasks.splice(taskIndex, 1);\n        saveTasksToLocalStorage();\n    }\n    // Assignment Requirement 3 - Users must be able to change tasks' descriptions\n    function editTask() {\n        descriptionInput.value = taskDescription;\n        descriptionSpan.replaceWith(descriptionInput);\n        descriptionInput.focus();\n\n        descriptionInput.addEventListener(\"keydown\", (e) => {\n            if (e.key === \"Enter\") {\n                setTaskDescription(descriptionInput.value);\n            } else if (e.key === \"Escape\") {\n                setTaskDescription(taskDescription);\n            }\n        });\n\n        descriptionInput.addEventListener(\"blur\", () => {\n            setTaskDescription(descriptionInput.value);\n        });\n    }\n\n    function setTaskDescription(val) {\n        taskDescription = val;\n        if (taskDescription === \"\") {\n            descriptionSpan.textContent = TASK_PLACEHOLDER;\n            descriptionSpan.classList.add(\"placeholder\");\n        } else {\n            descriptionSpan.textContent = taskDescription;\n            descriptionSpan.classList.remove(\"placeholder\");\n        }\n        descriptionInput.replaceWith(descriptionSpan);\n\n        const taskIndex = getTaskIndex();\n        tasks[taskIndex].description = taskDescription;\n        saveTasksToLocalStorage();\n    }\n\n    function startWorkSession(currentTaskLi) {\n        const timerScreen = document.getElementById(\"timer-screen\");\n        const currentTask = document.getElementById(\"current-task\");\n        const timer = document.getElementById(\"timer\");\n\n        timerScreen.style.display = \"flex\";\n        taskList.style.display = \"none\";\n        addTaskButton.style.display = \"none\";\n        document.querySelector(\".interval-settings\").style.display = \"none\";\n\n        currentTask.textContent = taskDescription;\n        // ALLOW USERS TO CHANGE INTERVAL TIMES\n        const workMinutes = document.querySelector(\"#work-interval\").value || 25;\n        timeLeft = workMinutes * 60;\n        isPaused = false;\n\n        pauseButtonGlobal.style.display = \"inline-block\";\n        pauseButtonGlobal.textContent = \"⏸️ pause\";\n\n        pauseButtonGlobal.onclick = function () {\n            isPaused = !isPaused;\n            pauseButtonGlobal.textContent = isPaused ? \"▶️ resume\" : \"⏸️ pause\";\n        };\n\n        // ONLY ONE TIMER RUNNING AT A TIME\n        clearInterval(intervalId);\n\n        intervalId = setInterval(() => {\n            if (!isPaused) {\n                const minutes = Math.floor(timeLeft / 60);\n                const seconds = timeLeft % 60;\n                timer.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n                timeLeft--;\n\n                if (timeLeft < 0) {\n                    clearInterval(intervalId);\n                    playSound();\n                    pauseButtonGlobal.style.display = \"none\";\n\n                    const counter = currentTaskLi.querySelector(\".session-counter\");\n                    if (counter) {\n                        const currentCount = parseInt(counter.dataset.count) || 0;\n                        const newCount = currentCount + 1;\n                        counter.dataset.count = newCount;\n\n                        // Clear existing lemons\n                        counter.innerHTML = \"\";\n\n                        // EXTRA FEATURE - INTEGRATING FONTAWESOME to display lemon icons\n                        for (let i = 0; i < newCount; i++) {\n                            const lemonIcon = document.createElement(\"i\");\n                            lemonIcon.className = \"fas fa-lemon\"; // Use FontAwesome lemon icon\n                            lemonIcon.style.color = \"#FFD700\"; // Gold/Yellow color\n                            counter.appendChild(lemonIcon);\n                        }\n\n                        const taskIndex = Array.from(taskList.children).indexOf(currentTaskLi);\n                        tasks[taskIndex].sessionCount = newCount;\n                        saveTasksToLocalStorage();\n                    }\n\n                    // AUTO START BREAK SESSION AFTER WORK ENDS\n                    startBreakSession();\n                }\n            }\n        }, 1000);\n\n        // ALLOW CANCEL/RESET COUNTDOWN TIMER\n        document.getElementById(\"stop-btn\").onclick = function () {\n            clearInterval(intervalId);\n            pauseButtonGlobal.style.display = \"none\";\n            timerScreen.style.display = \"none\";\n            taskList.style.display = \"block\";\n            addTaskButton.style.display = \"block\";\n            document.querySelector(\".interval-settings\").style.display = \"flex\";\n        };\n    }\n\n    function startBreakSession() {\n        const timerScreen = document.getElementById(\"timer-screen\");\n        const currentTask = document.getElementById(\"current-task\");\n        const timer = document.getElementById(\"timer\");\n\n        currentTask.textContent = \"Break time! 💥\";\n        const breakMinutes = document.querySelector(\"#break-interval\").value || 5;\n        let breakTimeLeft = breakMinutes * 60;\n\n        clearInterval(intervalId);\n        intervalId = setInterval(() => {\n            const minutes = Math.floor(breakTimeLeft / 60);\n            const seconds = breakTimeLeft % 60;\n            timer.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n            breakTimeLeft--;\n\n            if (breakTimeLeft < 0) {\n                clearInterval(intervalId);\n                timer.textContent = \"Break over! 🎉\";\n                playSound();\n\n                setTimeout(() => {\n                    timerScreen.style.display = \"none\";\n                    taskList.style.display = \"block\";\n                    addTaskButton.style.display = \"block\";\n                    document.querySelector(\".interval-settings\").style.display = \"flex\";\n                }, 2000);\n            }\n        }, 1000);\n\n        document.getElementById(\"stop-btn\").onclick = function () {\n            clearInterval(intervalId);\n            timerScreen.style.display = \"none\";\n            taskList.style.display = \"block\";\n            addTaskButton.style.display = \"block\";\n            document.querySelector(\".interval-settings\").style.display = \"flex\";\n        };\n    }\n}\n\n// EXTRA FEATURE 2 - USING Audio API to play a tone indicaing a session is done\nfunction playSound() {\n    const beep = new Audio(\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\");\n    beep.play().catch((error) => console.log(\"Sound play blocked:\", error));\n}\n// PERSIST TASKS/SESSIONS ACROSS REFRESH (localStorage)\nfunction saveTasksToLocalStorage() {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n}\n\nfunction loadTasksFromLocalStorage() {\n    const saved = localStorage.getItem(\"tasks\");\n    return saved ? JSON.parse(saved) : [];\n}\n\naddTaskButton.addEventListener(\"click\", () => addTask(\"\"));\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const savedTasks = loadTasksFromLocalStorage();\n    for (const task of savedTasks) {\n        addTask(task.description, task.sessionCount || 0);\n    }\n});\n"],"names":["TASK_PLACEHOLDER","addTaskButton","document","querySelector","taskList","pauseButtonGlobal","getElementById","darkModeToggle","createElement","textContent","className","body","prepend","addEventListener","classList","toggle","tasks","intervalId","isPaused","timeLeft","addTask","description","sessionCount","taskDescription","newTask","descriptionSpan","descriptionInput","startButton","removeButton","sessionCounterSpan","innerHTML","i","lemonIcon","style","color","appendChild","getTaskIndex","Array","from","children","indexOf","setTaskDescription","val","add","remove","replaceWith","taskIndex","saveTasksToLocalStorage","dataset","count","currentTaskLi","timerScreen","currentTask","timer","display","workMinutes","value","onclick","clearInterval","setInterval","minutes","Math","floor","seconds","String","padStart","playSound","counter","newCount","parseInt","breakTimeLeft","setTimeout","startBreakSession","startWorkSession","splice","setAttribute","append","focus","e","key","push","Audio","play","catch","error","console","log","localStorage","setItem","JSON","stringify","window","savedTasks","saved","getItem","parse","loadTasksFromLocalStorage","task"],"mappings":"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"}